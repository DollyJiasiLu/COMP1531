createStatements=["""CREATE TABLE IF NOT EXISTS Surveys (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(100) NOT NULL, status INTEGER NOT NULL,
    open VARCHAR(20), close VARCHAR(20)
    );""",\
    """CREATE TABLE IF NOT EXISTS Questions (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    question VARCHAR(200) NOT NULL, type VARCHAR(1) NOT NULL,
    isMandatory BOOLEAN NOT NULL, isDeleted BOOLEAN NOT NULL);""",\
    """CREATE TABLE IF NOT EXISTS Classes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(15) NOT NULL, sem VARCHAR(4) NOT NULL
    );""",\
    """CREATE TABLE IF NOT EXISTS Users (ID VARCHAR(50) PRIMARY KEY,
    password VARCHAR(25) NOT NULL,
    type INTEGER NOT NULL
    );""",\
    """CREATE TABLE IF NOT EXISTS completedSurvey (
    surveyID INTEGER, userID VARCHAR(50),
    PRIMARY KEY (surveyID, userID),
    FOREIGN KEY (surveyID) REFERENCES Surveys (ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (userID) REFERENCES Users (ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );""",\
    """CREATE TABLE IF NOT EXISTS mcAnswers (
    ID INTEGER PRIMARY KEY,
    qID INTEGER NOT NULL,
    option VARCHAR(100) NOT NULL,
    FOREIGN KEY (qID) REFERENCES Questions (ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );""",\
    """CREATE TABLE IF NOT EXISTS surveyAllocation (
    surveyID INTEGER, classID INTEGER,
    PRIMARY KEY (surveyID, classID),
    FOREIGN KEY (surveyID) REFERENCES Surveys (ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (classID) REFERENCES Classes (ID)
    );""",\
    """CREATE TABLE IF NOT EXISTS enrollment (
    classID INTEGER, userID VARCHAR(50),
    PRIMARY KEY (userID, classID),
    FOREIGN KEY (classID) REFERENCES Classes (ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (userID) REFERENCES Users (ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );""",\
    """CREATE TABLE IF NOT EXISTS questionAllocation (
    surveyID INTEGER, qID INTEGER,
    PRIMARY KEY (surveyID, qID),
    FOREIGN KEY (surveyID) REFERENCES Surveys (ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (qID) REFERENCES Questions (ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );""",\
    """CREATE TABLE IF NOT EXISTS mcResults (
    surveyID INTEGER, option INTEGER,
    tally INTEGER NOT NULL,
    PRIMARY KEY (surveyID, option),
    FOREIGN KEY (surveyID) REFERENCES Surveys (ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (option) REFERENCES mcAnswers (ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );""",\
    """CREATE TABLE IF NOT EXISTS saResults (
    ID INTEGER PRIMARY KEY,
    surveyID INTEGER, qID INTEGER,
    answer VARCHAR(500) NOT NULL,
    FOREIGN KEY (surveyID) REFERENCES Surveys (ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (qID) REFERENCES Questions (ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );""",\
    """CREATE TABLE IF NOT EXISTS Guests (ID VARCHAR(50) PRIMARY KEY,
    password VARCHAR(25) NOT NULL,
    courses VARCHAR(100) NOT NULL);""",\
    "PRAGMA foreign_keys = ON;"]
